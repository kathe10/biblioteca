package LibroApp;


/**
* LibroApp/_LibroStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from LibroApp.idl
* jueves 9 de mayo de 2019 11:09:42 PM COT
*/

public class _LibroStub extends org.omg.CORBA.portable.ObjectImpl implements LibroApp.Libro
{

  public boolean insertarLibro (String titulo, String autor, String categoria, String editorial, String paginas, String descripcion, String portada)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("insertarLibro", true);
                $out.write_wstring (titulo);
                $out.write_wstring (autor);
                $out.write_wstring (categoria);
                $out.write_wstring (editorial);
                $out.write_wstring (paginas);
                $out.write_wstring (descripcion);
                $out.write_wstring (portada);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return insertarLibro (titulo, autor, categoria, editorial, paginas, descripcion, portada        );
            } finally {
                _releaseReply ($in);
            }
  } // insertarLibro

  public boolean actualizarLibro (int asin, String titulo, String autor, String categoria, String editorial, String paginas, String descripcion, String portada)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("actualizarLibro", true);
                $out.write_long (asin);
                $out.write_wstring (titulo);
                $out.write_wstring (autor);
                $out.write_wstring (categoria);
                $out.write_wstring (editorial);
                $out.write_wstring (paginas);
                $out.write_wstring (descripcion);
                $out.write_wstring (portada);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return actualizarLibro (asin, titulo, autor, categoria, editorial, paginas, descripcion, portada        );
            } finally {
                _releaseReply ($in);
            }
  } // actualizarLibro

  public boolean eliminarLibro (int asin, String titulo, String autor, String categoria, String editorial, String paginas, String descripcion, String portada)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("eliminarLibro", true);
                $out.write_long (asin);
                $out.write_wstring (titulo);
                $out.write_wstring (autor);
                $out.write_wstring (categoria);
                $out.write_wstring (editorial);
                $out.write_wstring (paginas);
                $out.write_wstring (descripcion);
                $out.write_wstring (portada);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return eliminarLibro (asin, titulo, autor, categoria, editorial, paginas, descripcion, portada        );
            } finally {
                _releaseReply ($in);
            }
  } // eliminarLibro

  public void shutdown ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("shutdown", false);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                shutdown (        );
            } finally {
                _releaseReply ($in);
            }
  } // shutdown

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:LibroApp/Libro:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _LibroStub
